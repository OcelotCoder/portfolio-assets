<style>
  @import url('https://fonts.googleapis.com/css2?family=Oswald:wght@400;700&display=swap');
  html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    overflow-x: hidden;
  }
  body {
    background-color: white;
  }

  @keyframes border-flash {
    0% { border-color: #7e49b7; }
    50% { border-color: white; }
    100% { border-color: #7e49b7; }
  }

  .turntable-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
  }

  .turntable-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 300px;
    border-top: 2px dotted;
    border-bottom: 2px dotted;
    overflow: hidden;
    background-color: #151514;
    transition: all 0.5s ease-in-out;
    animation: border-flash 10s infinite;
  }

  .turntable-column {
    position: absolute;
    height: 100%;
    background-color: #151514;
    transition: all 0.5s ease-in-out;
  }

  .turntable-column:nth-child(1) {
    left: 0;
    width: 33.33%;
  }

  .turntable-column:nth-child(2) {
    left: 33.33%;
    width: 33.33%;
  }

  .turntable-column:nth-child(3) {
    left: 66.66%;
    width: 33.33%;
  }

  .turntable-column.enlarged {
    width: 100%;
    left: 0;
    transform: none;
    opacity: 1;
    z-index: 10;
  }

  .turntable-column.faded {
    opacity: 0;
    pointer-events: none;
  }

  .turntable-column video {
    width: 100%;
    height: 100%;
    object-fit: contain;
    cursor: pointer;
    transition: all 0.5s ease-in-out;
  }

  .turntable-column.enlarged video {
    object-fit: cover;
    object-position: 50% 100%;
  }

  .video-label-container {
    display: flex;
    justify-content: center;
    width: 100%;
    gap: 20px;
  }

  .video-label {
    font-family: 'Oswald', sans-serif;
    font-size: 12px;
    color: black;
    text-align: center;
    text-transform: uppercase;
    flex: 1 1 33.33%;
    max-width: 33.33%;
    min-width: 0;
    margin-top: 10px;
    transition: all 0.5s ease-in-out;
  }

  .video-label.faded {
    opacity: 0;
    pointer-events: none;
  }

  .enlarge-icon {
    position: absolute;
    bottom: 5px;
    right: 5px;
    font-size: 2em;
    color: white;
    background-color: rgba(0, 0, 0, 0.5);
    border-radius: 50%;
    width: 30px;
    height: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    z-index: 10;
    transition: all 0.2s ease-in-out;
  }

  .turntable-column.enlarged .enlarge-icon {
    transform: scale(1.5);
  }
</style>

<div class="turntable-section">
  <div class="turntable-container">
    <div class="turntable-column">
      <div class="video-wrapper">
        <video id="gecko" autoplay muted loop playsinline></video>
        <div class="enlarge-icon">+</div>
      </div>
    </div>
    <div class="turntable-column">
      <div class="video-wrapper">
        <video id="skink" autoplay muted loop playsinline></video>
        <div class="enlarge-icon">+</div>
      </div>
    </div>
    <div class="turntable-column">
      <div class="video-wrapper">
        <video id="lizard" autoplay muted loop playsinline></video>
        <div class="enlarge-icon">+</div>
      </div>
    </div>
  </div>

  <div class="video-label-container">
    <div class="video-label">Leaf-tail gecko</div>
    <div class="video-label">Sun-skink</div>
    <div class="video-label">Horned lizard</div>
  </div>
</div>

<script>
  const gecko = document.getElementById('gecko');
  const skink = document.getElementById('skink');
  const lizard = document.getElementById('lizard');
  const videos = [gecko, skink, lizard];
  
  gecko.src = "https://raw.githubusercontent.com/OcelotCoder/portfolio-assets/main/GeckoTurntable.mp4";
  skink.src = "https://raw.githubusercontent.com/OcelotCoder/portfolio-assets/main/SkinkTurntable.mp4";
  lizard.src = "https://raw.githubusercontent.com/OcelotCoder/portfolio-assets/main/LizardTurntableNEW.mp4";

  const columns = document.querySelectorAll('.turntable-column');
  const labels = document.querySelectorAll('.video-label');
  const icons = document.querySelectorAll('.enlarge-icon');
  let enlargedState = false;
  let timeoutId = null;
  let syncIntervalId = null;

  function syncVideos() {
    const masterVideo = videos[0];
    videos.forEach(video => {
      if (video !== masterVideo) {
        if (Math.abs(video.currentTime - masterVideo.currentTime) > 0.1) {
          video.currentTime = masterVideo.currentTime;
        }
      }
    });
  }

  // auto-revert function
  function autoRevert() {
    columns.forEach(c => c.classList.remove('enlarged', 'faded'));
    labels.forEach(l => l.classList.remove('faded'));
    icons.forEach(i => i.textContent = '+');
    enlargedState = false;
    // restart syncing when revert
    syncIntervalId = setInterval(syncVideos, 100);
  }

  // start syncing when videos are ready
  let loadedCount = 0;
  videos.forEach(video => {
    video.addEventListener('canplaythrough', () => {
      loadedCount++;
      if (loadedCount === videos.length) {
        syncIntervalId = setInterval(syncVideos, 100);
      }
    });
  });

  columns.forEach((column, index) => {
    column.addEventListener('click', (event) => {
      const isEnlargeElement = event.target.closest('.video-wrapper');

      if (enlargedState) {
        // clear timeout and revert on click
        clearTimeout(timeoutId);
        autoRevert();
        
      } else if (isEnlargeElement) {
        // clear sync interval
        clearInterval(syncIntervalId);
        
        // enlarge video
        columns.forEach((c, i) => {
          if (c === column) {
            c.classList.add('enlarged');
            labels[i].classList.remove('faded');
            icons[i].textContent = '-';
          } else {
            c.classList.add('faded');
            labels[i].classList.add('faded');
          }
        });
        enlargedState = true;
        
        timeoutId = setTimeout(autoRevert, 30000);
      }
    });
  });
</script>
